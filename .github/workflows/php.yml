name: 'php'

on:
  pull_request:
    paths:
      - '**/*.php'
      - '.github/workflows/php.yml'
      - 'composer.json'
  push:
    paths:
      - '**/*.php'
      - '.github/workflows/php.yml'
      - 'composer.json'

jobs:
  cs:
    name: 'Check coding style'
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        php-version: ["8.2","8.3"]
    steps:
      - name: 'Checkout current revision'
        uses: 'actions/checkout@v4'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'
          tools: 'composer:v2'
          extensions: 'mbstring, intl'
          coverage: 'none'

      - name: 'Discover Composer cache directory'
        id: 'cachedir'
        run: echo "path=$(composer global config cache-dir)" >> $GITHUB_OUTPUT

      - name: 'Share Composer cache across runs'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.cachedir.outputs.path }}'
          key: "composer-${{ github.job }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: |
            composer-${{ github.job }}-
            composer-

      - name: 'Install dependencies with Composer'
        run: 'composer install --prefer-dist --no-interaction --ignore-platform-req=ext-opentelemetry'

      - name: 'Run PHP CodeSniffer'
        run: vendor/bin/phpcs -n

  stan:
    name: 'Static code analyzer'
    if: "!contains(github.event.commits[0].message, '[skip ci]') && !contains(github.event.commits[0].message, '[ci skip]')"
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        php-version: ["8.2","8.3"]
    steps:
      - name: 'Checkout current revision'
        uses: 'actions/checkout@v4'

      - name: 'Setup PHP'
        uses: 'shivammathur/setup-php@v2'
        with:
          php-version: '${{ matrix.php-version }}'
          tools: 'composer:v2'
          extensions: 'mbstring, intl'
          coverage: 'none'

      - name: 'Discover Composer cache directory'
        id: 'cachedir'
        run: echo "path=$(composer global config cache-dir)" >> $GITHUB_OUTPUT

      - name: 'Share Composer cache across runs'
        uses: 'actions/cache@v4'
        with:
          path: '${{ steps.cachedir.outputs.path }}'
          key: "composer-${{ github.job }}-${{ hashFiles('**/composer.json') }}"
          restore-keys: |
            composer-${{ github.job }}-
            composer-

      - name: 'Install dependencies with Composer'
        run: 'composer install --prefer-dist --no-interaction --ignore-platform-req=ext-opentelemetry'

      - name: 'Run PHP STAN'
        run: vendor/bin/phpstan analyse --no-progress --error-format=github
